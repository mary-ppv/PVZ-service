name: Go CI/CD Pipeline

on:
  push:
    branches: [main]
    tags: [ 'v*' ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: maryppv/pvz_service

jobs:
  test:
    runs-on: ubuntu-latest
    container: golang:1.23.2
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run Unit Tests
        run: GOOS=linux GOARCH=amd64 go test -v -race ./...

      - name: Vet
        run: go vet ./...

      - name: Check formatting
        run: test -z $(gofmt -l .)

  deploy:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/') 
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=sha
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Print image info
        run: |
          echo "Image pushed: ${{ steps.meta.outputs.tags }}"